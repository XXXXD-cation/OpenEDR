// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.12.4
// source: shared/proto/events.proto

package events

import (
	common "github.com/XXXXD-cation/OpenEDR/shared/proto/common"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 进程事件
type ProcessEvent struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	ProcessId        string                 `protobuf:"bytes,1,opt,name=process_id,json=processId,proto3" json:"process_id,omitempty"`
	ParentProcessId  string                 `protobuf:"bytes,2,opt,name=parent_process_id,json=parentProcessId,proto3" json:"parent_process_id,omitempty"`
	ProcessName      string                 `protobuf:"bytes,3,opt,name=process_name,json=processName,proto3" json:"process_name,omitempty"`
	CommandLine      string                 `protobuf:"bytes,4,opt,name=command_line,json=commandLine,proto3" json:"command_line,omitempty"`
	ExecutablePath   string                 `protobuf:"bytes,5,opt,name=executable_path,json=executablePath,proto3" json:"executable_path,omitempty"`
	WorkingDirectory string                 `protobuf:"bytes,6,opt,name=working_directory,json=workingDirectory,proto3" json:"working_directory,omitempty"`
	User             string                 `protobuf:"bytes,7,opt,name=user,proto3" json:"user,omitempty"`
	StartTime        *timestamp.Timestamp   `protobuf:"bytes,8,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime          *timestamp.Timestamp   `protobuf:"bytes,9,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	ExitCode         int32                  `protobuf:"varint,10,opt,name=exit_code,json=exitCode,proto3" json:"exit_code,omitempty"`
	ProcessHash      string                 `protobuf:"bytes,11,opt,name=process_hash,json=processHash,proto3" json:"process_hash,omitempty"`
	LoadedModules    []string               `protobuf:"bytes,12,rep,name=loaded_modules,json=loadedModules,proto3" json:"loaded_modules,omitempty"`
	Environment      map[string]string      `protobuf:"bytes,13,rep,name=environment,proto3" json:"environment,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *ProcessEvent) Reset() {
	*x = ProcessEvent{}
	mi := &file_shared_proto_events_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProcessEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessEvent) ProtoMessage() {}

func (x *ProcessEvent) ProtoReflect() protoreflect.Message {
	mi := &file_shared_proto_events_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessEvent.ProtoReflect.Descriptor instead.
func (*ProcessEvent) Descriptor() ([]byte, []int) {
	return file_shared_proto_events_proto_rawDescGZIP(), []int{0}
}

func (x *ProcessEvent) GetProcessId() string {
	if x != nil {
		return x.ProcessId
	}
	return ""
}

func (x *ProcessEvent) GetParentProcessId() string {
	if x != nil {
		return x.ParentProcessId
	}
	return ""
}

func (x *ProcessEvent) GetProcessName() string {
	if x != nil {
		return x.ProcessName
	}
	return ""
}

func (x *ProcessEvent) GetCommandLine() string {
	if x != nil {
		return x.CommandLine
	}
	return ""
}

func (x *ProcessEvent) GetExecutablePath() string {
	if x != nil {
		return x.ExecutablePath
	}
	return ""
}

func (x *ProcessEvent) GetWorkingDirectory() string {
	if x != nil {
		return x.WorkingDirectory
	}
	return ""
}

func (x *ProcessEvent) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *ProcessEvent) GetStartTime() *timestamp.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *ProcessEvent) GetEndTime() *timestamp.Timestamp {
	if x != nil {
		return x.EndTime
	}
	return nil
}

func (x *ProcessEvent) GetExitCode() int32 {
	if x != nil {
		return x.ExitCode
	}
	return 0
}

func (x *ProcessEvent) GetProcessHash() string {
	if x != nil {
		return x.ProcessHash
	}
	return ""
}

func (x *ProcessEvent) GetLoadedModules() []string {
	if x != nil {
		return x.LoadedModules
	}
	return nil
}

func (x *ProcessEvent) GetEnvironment() map[string]string {
	if x != nil {
		return x.Environment
	}
	return nil
}

// 网络事件
type NetworkEvent struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	ProcessId       string                 `protobuf:"bytes,1,opt,name=process_id,json=processId,proto3" json:"process_id,omitempty"`
	Protocol        string                 `protobuf:"bytes,2,opt,name=protocol,proto3" json:"protocol,omitempty"`
	LocalAddress    string                 `protobuf:"bytes,3,opt,name=local_address,json=localAddress,proto3" json:"local_address,omitempty"`
	LocalPort       int32                  `protobuf:"varint,4,opt,name=local_port,json=localPort,proto3" json:"local_port,omitempty"`
	RemoteAddress   string                 `protobuf:"bytes,5,opt,name=remote_address,json=remoteAddress,proto3" json:"remote_address,omitempty"`
	RemotePort      int32                  `protobuf:"varint,6,opt,name=remote_port,json=remotePort,proto3" json:"remote_port,omitempty"`
	Direction       string                 `protobuf:"bytes,7,opt,name=direction,proto3" json:"direction,omitempty"` // inbound, outbound
	BytesSent       int64                  `protobuf:"varint,8,opt,name=bytes_sent,json=bytesSent,proto3" json:"bytes_sent,omitempty"`
	BytesReceived   int64                  `protobuf:"varint,9,opt,name=bytes_received,json=bytesReceived,proto3" json:"bytes_received,omitempty"`
	ConnectionTime  *timestamp.Timestamp   `protobuf:"bytes,10,opt,name=connection_time,json=connectionTime,proto3" json:"connection_time,omitempty"`
	CloseTime       *timestamp.Timestamp   `protobuf:"bytes,11,opt,name=close_time,json=closeTime,proto3" json:"close_time,omitempty"`
	ConnectionState string                 `protobuf:"bytes,12,opt,name=connection_state,json=connectionState,proto3" json:"connection_state,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *NetworkEvent) Reset() {
	*x = NetworkEvent{}
	mi := &file_shared_proto_events_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NetworkEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkEvent) ProtoMessage() {}

func (x *NetworkEvent) ProtoReflect() protoreflect.Message {
	mi := &file_shared_proto_events_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkEvent.ProtoReflect.Descriptor instead.
func (*NetworkEvent) Descriptor() ([]byte, []int) {
	return file_shared_proto_events_proto_rawDescGZIP(), []int{1}
}

func (x *NetworkEvent) GetProcessId() string {
	if x != nil {
		return x.ProcessId
	}
	return ""
}

func (x *NetworkEvent) GetProtocol() string {
	if x != nil {
		return x.Protocol
	}
	return ""
}

func (x *NetworkEvent) GetLocalAddress() string {
	if x != nil {
		return x.LocalAddress
	}
	return ""
}

func (x *NetworkEvent) GetLocalPort() int32 {
	if x != nil {
		return x.LocalPort
	}
	return 0
}

func (x *NetworkEvent) GetRemoteAddress() string {
	if x != nil {
		return x.RemoteAddress
	}
	return ""
}

func (x *NetworkEvent) GetRemotePort() int32 {
	if x != nil {
		return x.RemotePort
	}
	return 0
}

func (x *NetworkEvent) GetDirection() string {
	if x != nil {
		return x.Direction
	}
	return ""
}

func (x *NetworkEvent) GetBytesSent() int64 {
	if x != nil {
		return x.BytesSent
	}
	return 0
}

func (x *NetworkEvent) GetBytesReceived() int64 {
	if x != nil {
		return x.BytesReceived
	}
	return 0
}

func (x *NetworkEvent) GetConnectionTime() *timestamp.Timestamp {
	if x != nil {
		return x.ConnectionTime
	}
	return nil
}

func (x *NetworkEvent) GetCloseTime() *timestamp.Timestamp {
	if x != nil {
		return x.CloseTime
	}
	return nil
}

func (x *NetworkEvent) GetConnectionState() string {
	if x != nil {
		return x.ConnectionState
	}
	return ""
}

// 文件事件
type FileEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ProcessId     string                 `protobuf:"bytes,1,opt,name=process_id,json=processId,proto3" json:"process_id,omitempty"`
	FilePath      string                 `protobuf:"bytes,2,opt,name=file_path,json=filePath,proto3" json:"file_path,omitempty"`
	Operation     string                 `protobuf:"bytes,3,opt,name=operation,proto3" json:"operation,omitempty"`            // create, modify, delete, read, write, rename
	OldPath       string                 `protobuf:"bytes,4,opt,name=old_path,json=oldPath,proto3" json:"old_path,omitempty"` // for rename operations
	FileSize      int64                  `protobuf:"varint,5,opt,name=file_size,json=fileSize,proto3" json:"file_size,omitempty"`
	FileHash      string                 `protobuf:"bytes,6,opt,name=file_hash,json=fileHash,proto3" json:"file_hash,omitempty"`
	FileType      string                 `protobuf:"bytes,7,opt,name=file_type,json=fileType,proto3" json:"file_type,omitempty"`
	AccessTime    *timestamp.Timestamp   `protobuf:"bytes,8,opt,name=access_time,json=accessTime,proto3" json:"access_time,omitempty"`
	ModifyTime    *timestamp.Timestamp   `protobuf:"bytes,9,opt,name=modify_time,json=modifyTime,proto3" json:"modify_time,omitempty"`
	CreateTime    *timestamp.Timestamp   `protobuf:"bytes,10,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	Permissions   string                 `protobuf:"bytes,11,opt,name=permissions,proto3" json:"permissions,omitempty"`
	Owner         string                 `protobuf:"bytes,12,opt,name=owner,proto3" json:"owner,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FileEvent) Reset() {
	*x = FileEvent{}
	mi := &file_shared_proto_events_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileEvent) ProtoMessage() {}

func (x *FileEvent) ProtoReflect() protoreflect.Message {
	mi := &file_shared_proto_events_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileEvent.ProtoReflect.Descriptor instead.
func (*FileEvent) Descriptor() ([]byte, []int) {
	return file_shared_proto_events_proto_rawDescGZIP(), []int{2}
}

func (x *FileEvent) GetProcessId() string {
	if x != nil {
		return x.ProcessId
	}
	return ""
}

func (x *FileEvent) GetFilePath() string {
	if x != nil {
		return x.FilePath
	}
	return ""
}

func (x *FileEvent) GetOperation() string {
	if x != nil {
		return x.Operation
	}
	return ""
}

func (x *FileEvent) GetOldPath() string {
	if x != nil {
		return x.OldPath
	}
	return ""
}

func (x *FileEvent) GetFileSize() int64 {
	if x != nil {
		return x.FileSize
	}
	return 0
}

func (x *FileEvent) GetFileHash() string {
	if x != nil {
		return x.FileHash
	}
	return ""
}

func (x *FileEvent) GetFileType() string {
	if x != nil {
		return x.FileType
	}
	return ""
}

func (x *FileEvent) GetAccessTime() *timestamp.Timestamp {
	if x != nil {
		return x.AccessTime
	}
	return nil
}

func (x *FileEvent) GetModifyTime() *timestamp.Timestamp {
	if x != nil {
		return x.ModifyTime
	}
	return nil
}

func (x *FileEvent) GetCreateTime() *timestamp.Timestamp {
	if x != nil {
		return x.CreateTime
	}
	return nil
}

func (x *FileEvent) GetPermissions() string {
	if x != nil {
		return x.Permissions
	}
	return ""
}

func (x *FileEvent) GetOwner() string {
	if x != nil {
		return x.Owner
	}
	return ""
}

// 注册表事件 (Windows)
type RegistryEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ProcessId     string                 `protobuf:"bytes,1,opt,name=process_id,json=processId,proto3" json:"process_id,omitempty"`
	KeyPath       string                 `protobuf:"bytes,2,opt,name=key_path,json=keyPath,proto3" json:"key_path,omitempty"`
	ValueName     string                 `protobuf:"bytes,3,opt,name=value_name,json=valueName,proto3" json:"value_name,omitempty"`
	Operation     string                 `protobuf:"bytes,4,opt,name=operation,proto3" json:"operation,omitempty"` // create, modify, delete, query
	ValueType     string                 `protobuf:"bytes,5,opt,name=value_type,json=valueType,proto3" json:"value_type,omitempty"`
	OldValue      string                 `protobuf:"bytes,6,opt,name=old_value,json=oldValue,proto3" json:"old_value,omitempty"`
	NewValue      string                 `protobuf:"bytes,7,opt,name=new_value,json=newValue,proto3" json:"new_value,omitempty"`
	Timestamp     *timestamp.Timestamp   `protobuf:"bytes,8,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RegistryEvent) Reset() {
	*x = RegistryEvent{}
	mi := &file_shared_proto_events_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegistryEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegistryEvent) ProtoMessage() {}

func (x *RegistryEvent) ProtoReflect() protoreflect.Message {
	mi := &file_shared_proto_events_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegistryEvent.ProtoReflect.Descriptor instead.
func (*RegistryEvent) Descriptor() ([]byte, []int) {
	return file_shared_proto_events_proto_rawDescGZIP(), []int{3}
}

func (x *RegistryEvent) GetProcessId() string {
	if x != nil {
		return x.ProcessId
	}
	return ""
}

func (x *RegistryEvent) GetKeyPath() string {
	if x != nil {
		return x.KeyPath
	}
	return ""
}

func (x *RegistryEvent) GetValueName() string {
	if x != nil {
		return x.ValueName
	}
	return ""
}

func (x *RegistryEvent) GetOperation() string {
	if x != nil {
		return x.Operation
	}
	return ""
}

func (x *RegistryEvent) GetValueType() string {
	if x != nil {
		return x.ValueType
	}
	return ""
}

func (x *RegistryEvent) GetOldValue() string {
	if x != nil {
		return x.OldValue
	}
	return ""
}

func (x *RegistryEvent) GetNewValue() string {
	if x != nil {
		return x.NewValue
	}
	return ""
}

func (x *RegistryEvent) GetTimestamp() *timestamp.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

// DNS事件
type DNSEvent struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	ProcessId      string                 `protobuf:"bytes,1,opt,name=process_id,json=processId,proto3" json:"process_id,omitempty"`
	QueryName      string                 `protobuf:"bytes,2,opt,name=query_name,json=queryName,proto3" json:"query_name,omitempty"`
	QueryType      string                 `protobuf:"bytes,3,opt,name=query_type,json=queryType,proto3" json:"query_type,omitempty"`
	Answers        []string               `protobuf:"bytes,4,rep,name=answers,proto3" json:"answers,omitempty"`
	ResponseCode   string                 `protobuf:"bytes,5,opt,name=response_code,json=responseCode,proto3" json:"response_code,omitempty"`
	QueryTime      *timestamp.Timestamp   `protobuf:"bytes,6,opt,name=query_time,json=queryTime,proto3" json:"query_time,omitempty"`
	ResponseTimeMs int32                  `protobuf:"varint,7,opt,name=response_time_ms,json=responseTimeMs,proto3" json:"response_time_ms,omitempty"`
	DnsServer      string                 `protobuf:"bytes,8,opt,name=dns_server,json=dnsServer,proto3" json:"dns_server,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *DNSEvent) Reset() {
	*x = DNSEvent{}
	mi := &file_shared_proto_events_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DNSEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DNSEvent) ProtoMessage() {}

func (x *DNSEvent) ProtoReflect() protoreflect.Message {
	mi := &file_shared_proto_events_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DNSEvent.ProtoReflect.Descriptor instead.
func (*DNSEvent) Descriptor() ([]byte, []int) {
	return file_shared_proto_events_proto_rawDescGZIP(), []int{4}
}

func (x *DNSEvent) GetProcessId() string {
	if x != nil {
		return x.ProcessId
	}
	return ""
}

func (x *DNSEvent) GetQueryName() string {
	if x != nil {
		return x.QueryName
	}
	return ""
}

func (x *DNSEvent) GetQueryType() string {
	if x != nil {
		return x.QueryType
	}
	return ""
}

func (x *DNSEvent) GetAnswers() []string {
	if x != nil {
		return x.Answers
	}
	return nil
}

func (x *DNSEvent) GetResponseCode() string {
	if x != nil {
		return x.ResponseCode
	}
	return ""
}

func (x *DNSEvent) GetQueryTime() *timestamp.Timestamp {
	if x != nil {
		return x.QueryTime
	}
	return nil
}

func (x *DNSEvent) GetResponseTimeMs() int32 {
	if x != nil {
		return x.ResponseTimeMs
	}
	return 0
}

func (x *DNSEvent) GetDnsServer() string {
	if x != nil {
		return x.DnsServer
	}
	return ""
}

// 登录事件
type LoginEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SessionId     string                 `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	UserName      string                 `protobuf:"bytes,2,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
	Domain        string                 `protobuf:"bytes,3,opt,name=domain,proto3" json:"domain,omitempty"`
	LoginType     string                 `protobuf:"bytes,4,opt,name=login_type,json=loginType,proto3" json:"login_type,omitempty"` // interactive, network, service, batch
	SourceAddress string                 `protobuf:"bytes,5,opt,name=source_address,json=sourceAddress,proto3" json:"source_address,omitempty"`
	Workstation   string                 `protobuf:"bytes,6,opt,name=workstation,proto3" json:"workstation,omitempty"`
	LoginTime     *timestamp.Timestamp   `protobuf:"bytes,7,opt,name=login_time,json=loginTime,proto3" json:"login_time,omitempty"`
	LogoutTime    *timestamp.Timestamp   `protobuf:"bytes,8,opt,name=logout_time,json=logoutTime,proto3" json:"logout_time,omitempty"`
	Success       bool                   `protobuf:"varint,9,opt,name=success,proto3" json:"success,omitempty"`
	FailureReason string                 `protobuf:"bytes,10,opt,name=failure_reason,json=failureReason,proto3" json:"failure_reason,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LoginEvent) Reset() {
	*x = LoginEvent{}
	mi := &file_shared_proto_events_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LoginEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginEvent) ProtoMessage() {}

func (x *LoginEvent) ProtoReflect() protoreflect.Message {
	mi := &file_shared_proto_events_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginEvent.ProtoReflect.Descriptor instead.
func (*LoginEvent) Descriptor() ([]byte, []int) {
	return file_shared_proto_events_proto_rawDescGZIP(), []int{5}
}

func (x *LoginEvent) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *LoginEvent) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *LoginEvent) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *LoginEvent) GetLoginType() string {
	if x != nil {
		return x.LoginType
	}
	return ""
}

func (x *LoginEvent) GetSourceAddress() string {
	if x != nil {
		return x.SourceAddress
	}
	return ""
}

func (x *LoginEvent) GetWorkstation() string {
	if x != nil {
		return x.Workstation
	}
	return ""
}

func (x *LoginEvent) GetLoginTime() *timestamp.Timestamp {
	if x != nil {
		return x.LoginTime
	}
	return nil
}

func (x *LoginEvent) GetLogoutTime() *timestamp.Timestamp {
	if x != nil {
		return x.LogoutTime
	}
	return nil
}

func (x *LoginEvent) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *LoginEvent) GetFailureReason() string {
	if x != nil {
		return x.FailureReason
	}
	return ""
}

// 系统事件
type SystemEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	EventId       string                 `protobuf:"bytes,1,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
	Source        string                 `protobuf:"bytes,2,opt,name=source,proto3" json:"source,omitempty"`
	Category      string                 `protobuf:"bytes,3,opt,name=category,proto3" json:"category,omitempty"`
	Description   string                 `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	Timestamp     *timestamp.Timestamp   `protobuf:"bytes,5,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Attributes    map[string]string      `protobuf:"bytes,6,rep,name=attributes,proto3" json:"attributes,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SystemEvent) Reset() {
	*x = SystemEvent{}
	mi := &file_shared_proto_events_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SystemEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemEvent) ProtoMessage() {}

func (x *SystemEvent) ProtoReflect() protoreflect.Message {
	mi := &file_shared_proto_events_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemEvent.ProtoReflect.Descriptor instead.
func (*SystemEvent) Descriptor() ([]byte, []int) {
	return file_shared_proto_events_proto_rawDescGZIP(), []int{6}
}

func (x *SystemEvent) GetEventId() string {
	if x != nil {
		return x.EventId
	}
	return ""
}

func (x *SystemEvent) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *SystemEvent) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *SystemEvent) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *SystemEvent) GetTimestamp() *timestamp.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *SystemEvent) GetAttributes() map[string]string {
	if x != nil {
		return x.Attributes
	}
	return nil
}

// 统一事件结构
type Event struct {
	state     protoimpl.MessageState `protogen:"open.v1"`
	EventId   string                 `protobuf:"bytes,1,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
	AgentId   string                 `protobuf:"bytes,2,opt,name=agent_id,json=agentId,proto3" json:"agent_id,omitempty"`
	EventType common.EventType       `protobuf:"varint,3,opt,name=event_type,json=eventType,proto3,enum=openedr.common.EventType" json:"event_type,omitempty"`
	Timestamp *timestamp.Timestamp   `protobuf:"bytes,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Hostname  string                 `protobuf:"bytes,5,opt,name=hostname,proto3" json:"hostname,omitempty"`
	// 事件具体内容 (oneof)
	//
	// Types that are valid to be assigned to EventData:
	//
	//	*Event_ProcessEvent
	//	*Event_NetworkEvent
	//	*Event_FileEvent
	//	*Event_RegistryEvent
	//	*Event_DnsEvent
	//	*Event_LoginEvent
	//	*Event_SystemEvent
	EventData isEvent_EventData `protobuf_oneof:"event_data"`
	// 元数据
	Metadata      map[string]string  `protobuf:"bytes,20,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	ThreatLevel   common.ThreatLevel `protobuf:"varint,21,opt,name=threat_level,json=threatLevel,proto3,enum=openedr.common.ThreatLevel" json:"threat_level,omitempty"`
	Tags          []string           `protobuf:"bytes,22,rep,name=tags,proto3" json:"tags,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Event) Reset() {
	*x = Event{}
	mi := &file_shared_proto_events_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Event) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Event) ProtoMessage() {}

func (x *Event) ProtoReflect() protoreflect.Message {
	mi := &file_shared_proto_events_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Event.ProtoReflect.Descriptor instead.
func (*Event) Descriptor() ([]byte, []int) {
	return file_shared_proto_events_proto_rawDescGZIP(), []int{7}
}

func (x *Event) GetEventId() string {
	if x != nil {
		return x.EventId
	}
	return ""
}

func (x *Event) GetAgentId() string {
	if x != nil {
		return x.AgentId
	}
	return ""
}

func (x *Event) GetEventType() common.EventType {
	if x != nil {
		return x.EventType
	}
	return common.EventType(0)
}

func (x *Event) GetTimestamp() *timestamp.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *Event) GetHostname() string {
	if x != nil {
		return x.Hostname
	}
	return ""
}

func (x *Event) GetEventData() isEvent_EventData {
	if x != nil {
		return x.EventData
	}
	return nil
}

func (x *Event) GetProcessEvent() *ProcessEvent {
	if x != nil {
		if x, ok := x.EventData.(*Event_ProcessEvent); ok {
			return x.ProcessEvent
		}
	}
	return nil
}

func (x *Event) GetNetworkEvent() *NetworkEvent {
	if x != nil {
		if x, ok := x.EventData.(*Event_NetworkEvent); ok {
			return x.NetworkEvent
		}
	}
	return nil
}

func (x *Event) GetFileEvent() *FileEvent {
	if x != nil {
		if x, ok := x.EventData.(*Event_FileEvent); ok {
			return x.FileEvent
		}
	}
	return nil
}

func (x *Event) GetRegistryEvent() *RegistryEvent {
	if x != nil {
		if x, ok := x.EventData.(*Event_RegistryEvent); ok {
			return x.RegistryEvent
		}
	}
	return nil
}

func (x *Event) GetDnsEvent() *DNSEvent {
	if x != nil {
		if x, ok := x.EventData.(*Event_DnsEvent); ok {
			return x.DnsEvent
		}
	}
	return nil
}

func (x *Event) GetLoginEvent() *LoginEvent {
	if x != nil {
		if x, ok := x.EventData.(*Event_LoginEvent); ok {
			return x.LoginEvent
		}
	}
	return nil
}

func (x *Event) GetSystemEvent() *SystemEvent {
	if x != nil {
		if x, ok := x.EventData.(*Event_SystemEvent); ok {
			return x.SystemEvent
		}
	}
	return nil
}

func (x *Event) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *Event) GetThreatLevel() common.ThreatLevel {
	if x != nil {
		return x.ThreatLevel
	}
	return common.ThreatLevel(0)
}

func (x *Event) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

type isEvent_EventData interface {
	isEvent_EventData()
}

type Event_ProcessEvent struct {
	ProcessEvent *ProcessEvent `protobuf:"bytes,10,opt,name=process_event,json=processEvent,proto3,oneof"`
}

type Event_NetworkEvent struct {
	NetworkEvent *NetworkEvent `protobuf:"bytes,11,opt,name=network_event,json=networkEvent,proto3,oneof"`
}

type Event_FileEvent struct {
	FileEvent *FileEvent `protobuf:"bytes,12,opt,name=file_event,json=fileEvent,proto3,oneof"`
}

type Event_RegistryEvent struct {
	RegistryEvent *RegistryEvent `protobuf:"bytes,13,opt,name=registry_event,json=registryEvent,proto3,oneof"`
}

type Event_DnsEvent struct {
	DnsEvent *DNSEvent `protobuf:"bytes,14,opt,name=dns_event,json=dnsEvent,proto3,oneof"`
}

type Event_LoginEvent struct {
	LoginEvent *LoginEvent `protobuf:"bytes,15,opt,name=login_event,json=loginEvent,proto3,oneof"`
}

type Event_SystemEvent struct {
	SystemEvent *SystemEvent `protobuf:"bytes,16,opt,name=system_event,json=systemEvent,proto3,oneof"`
}

func (*Event_ProcessEvent) isEvent_EventData() {}

func (*Event_NetworkEvent) isEvent_EventData() {}

func (*Event_FileEvent) isEvent_EventData() {}

func (*Event_RegistryEvent) isEvent_EventData() {}

func (*Event_DnsEvent) isEvent_EventData() {}

func (*Event_LoginEvent) isEvent_EventData() {}

func (*Event_SystemEvent) isEvent_EventData() {}

// 事件批次
type EventBatch struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Events         []*Event               `protobuf:"bytes,1,rep,name=events,proto3" json:"events,omitempty"`
	BatchId        string                 `protobuf:"bytes,2,opt,name=batch_id,json=batchId,proto3" json:"batch_id,omitempty"`
	BatchTimestamp *timestamp.Timestamp   `protobuf:"bytes,3,opt,name=batch_timestamp,json=batchTimestamp,proto3" json:"batch_timestamp,omitempty"`
	AgentId        string                 `protobuf:"bytes,4,opt,name=agent_id,json=agentId,proto3" json:"agent_id,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *EventBatch) Reset() {
	*x = EventBatch{}
	mi := &file_shared_proto_events_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventBatch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventBatch) ProtoMessage() {}

func (x *EventBatch) ProtoReflect() protoreflect.Message {
	mi := &file_shared_proto_events_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventBatch.ProtoReflect.Descriptor instead.
func (*EventBatch) Descriptor() ([]byte, []int) {
	return file_shared_proto_events_proto_rawDescGZIP(), []int{8}
}

func (x *EventBatch) GetEvents() []*Event {
	if x != nil {
		return x.Events
	}
	return nil
}

func (x *EventBatch) GetBatchId() string {
	if x != nil {
		return x.BatchId
	}
	return ""
}

func (x *EventBatch) GetBatchTimestamp() *timestamp.Timestamp {
	if x != nil {
		return x.BatchTimestamp
	}
	return nil
}

func (x *EventBatch) GetAgentId() string {
	if x != nil {
		return x.AgentId
	}
	return ""
}

var File_shared_proto_events_proto protoreflect.FileDescriptor

const file_shared_proto_events_proto_rawDesc = "" +
	"\n" +
	"\x19shared/proto/events.proto\x12\x0eopenedr.events\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x19shared/proto/common.proto\"\xf3\x04\n" +
	"\fProcessEvent\x12\x1d\n" +
	"\n" +
	"process_id\x18\x01 \x01(\tR\tprocessId\x12*\n" +
	"\x11parent_process_id\x18\x02 \x01(\tR\x0fparentProcessId\x12!\n" +
	"\fprocess_name\x18\x03 \x01(\tR\vprocessName\x12!\n" +
	"\fcommand_line\x18\x04 \x01(\tR\vcommandLine\x12'\n" +
	"\x0fexecutable_path\x18\x05 \x01(\tR\x0eexecutablePath\x12+\n" +
	"\x11working_directory\x18\x06 \x01(\tR\x10workingDirectory\x12\x12\n" +
	"\x04user\x18\a \x01(\tR\x04user\x129\n" +
	"\n" +
	"start_time\x18\b \x01(\v2\x1a.google.protobuf.TimestampR\tstartTime\x125\n" +
	"\bend_time\x18\t \x01(\v2\x1a.google.protobuf.TimestampR\aendTime\x12\x1b\n" +
	"\texit_code\x18\n" +
	" \x01(\x05R\bexitCode\x12!\n" +
	"\fprocess_hash\x18\v \x01(\tR\vprocessHash\x12%\n" +
	"\x0eloaded_modules\x18\f \x03(\tR\rloadedModules\x12O\n" +
	"\venvironment\x18\r \x03(\v2-.openedr.events.ProcessEvent.EnvironmentEntryR\venvironment\x1a>\n" +
	"\x10EnvironmentEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xe4\x03\n" +
	"\fNetworkEvent\x12\x1d\n" +
	"\n" +
	"process_id\x18\x01 \x01(\tR\tprocessId\x12\x1a\n" +
	"\bprotocol\x18\x02 \x01(\tR\bprotocol\x12#\n" +
	"\rlocal_address\x18\x03 \x01(\tR\flocalAddress\x12\x1d\n" +
	"\n" +
	"local_port\x18\x04 \x01(\x05R\tlocalPort\x12%\n" +
	"\x0eremote_address\x18\x05 \x01(\tR\rremoteAddress\x12\x1f\n" +
	"\vremote_port\x18\x06 \x01(\x05R\n" +
	"remotePort\x12\x1c\n" +
	"\tdirection\x18\a \x01(\tR\tdirection\x12\x1d\n" +
	"\n" +
	"bytes_sent\x18\b \x01(\x03R\tbytesSent\x12%\n" +
	"\x0ebytes_received\x18\t \x01(\x03R\rbytesReceived\x12C\n" +
	"\x0fconnection_time\x18\n" +
	" \x01(\v2\x1a.google.protobuf.TimestampR\x0econnectionTime\x129\n" +
	"\n" +
	"close_time\x18\v \x01(\v2\x1a.google.protobuf.TimestampR\tcloseTime\x12)\n" +
	"\x10connection_state\x18\f \x01(\tR\x0fconnectionState\"\xc6\x03\n" +
	"\tFileEvent\x12\x1d\n" +
	"\n" +
	"process_id\x18\x01 \x01(\tR\tprocessId\x12\x1b\n" +
	"\tfile_path\x18\x02 \x01(\tR\bfilePath\x12\x1c\n" +
	"\toperation\x18\x03 \x01(\tR\toperation\x12\x19\n" +
	"\bold_path\x18\x04 \x01(\tR\aoldPath\x12\x1b\n" +
	"\tfile_size\x18\x05 \x01(\x03R\bfileSize\x12\x1b\n" +
	"\tfile_hash\x18\x06 \x01(\tR\bfileHash\x12\x1b\n" +
	"\tfile_type\x18\a \x01(\tR\bfileType\x12;\n" +
	"\vaccess_time\x18\b \x01(\v2\x1a.google.protobuf.TimestampR\n" +
	"accessTime\x12;\n" +
	"\vmodify_time\x18\t \x01(\v2\x1a.google.protobuf.TimestampR\n" +
	"modifyTime\x12;\n" +
	"\vcreate_time\x18\n" +
	" \x01(\v2\x1a.google.protobuf.TimestampR\n" +
	"createTime\x12 \n" +
	"\vpermissions\x18\v \x01(\tR\vpermissions\x12\x14\n" +
	"\x05owner\x18\f \x01(\tR\x05owner\"\x99\x02\n" +
	"\rRegistryEvent\x12\x1d\n" +
	"\n" +
	"process_id\x18\x01 \x01(\tR\tprocessId\x12\x19\n" +
	"\bkey_path\x18\x02 \x01(\tR\akeyPath\x12\x1d\n" +
	"\n" +
	"value_name\x18\x03 \x01(\tR\tvalueName\x12\x1c\n" +
	"\toperation\x18\x04 \x01(\tR\toperation\x12\x1d\n" +
	"\n" +
	"value_type\x18\x05 \x01(\tR\tvalueType\x12\x1b\n" +
	"\told_value\x18\x06 \x01(\tR\boldValue\x12\x1b\n" +
	"\tnew_value\x18\a \x01(\tR\bnewValue\x128\n" +
	"\ttimestamp\x18\b \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\"\xaa\x02\n" +
	"\bDNSEvent\x12\x1d\n" +
	"\n" +
	"process_id\x18\x01 \x01(\tR\tprocessId\x12\x1d\n" +
	"\n" +
	"query_name\x18\x02 \x01(\tR\tqueryName\x12\x1d\n" +
	"\n" +
	"query_type\x18\x03 \x01(\tR\tqueryType\x12\x18\n" +
	"\aanswers\x18\x04 \x03(\tR\aanswers\x12#\n" +
	"\rresponse_code\x18\x05 \x01(\tR\fresponseCode\x129\n" +
	"\n" +
	"query_time\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\tqueryTime\x12(\n" +
	"\x10response_time_ms\x18\a \x01(\x05R\x0eresponseTimeMs\x12\x1d\n" +
	"\n" +
	"dns_server\x18\b \x01(\tR\tdnsServer\"\x81\x03\n" +
	"\n" +
	"LoginEvent\x12\x1d\n" +
	"\n" +
	"session_id\x18\x01 \x01(\tR\tsessionId\x12\x1b\n" +
	"\tuser_name\x18\x02 \x01(\tR\buserName\x12\x16\n" +
	"\x06domain\x18\x03 \x01(\tR\x06domain\x12\x1d\n" +
	"\n" +
	"login_type\x18\x04 \x01(\tR\tloginType\x12%\n" +
	"\x0esource_address\x18\x05 \x01(\tR\rsourceAddress\x12 \n" +
	"\vworkstation\x18\x06 \x01(\tR\vworkstation\x129\n" +
	"\n" +
	"login_time\x18\a \x01(\v2\x1a.google.protobuf.TimestampR\tloginTime\x12;\n" +
	"\vlogout_time\x18\b \x01(\v2\x1a.google.protobuf.TimestampR\n" +
	"logoutTime\x12\x18\n" +
	"\asuccess\x18\t \x01(\bR\asuccess\x12%\n" +
	"\x0efailure_reason\x18\n" +
	" \x01(\tR\rfailureReason\"\xc4\x02\n" +
	"\vSystemEvent\x12\x19\n" +
	"\bevent_id\x18\x01 \x01(\tR\aeventId\x12\x16\n" +
	"\x06source\x18\x02 \x01(\tR\x06source\x12\x1a\n" +
	"\bcategory\x18\x03 \x01(\tR\bcategory\x12 \n" +
	"\vdescription\x18\x04 \x01(\tR\vdescription\x128\n" +
	"\ttimestamp\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\x12K\n" +
	"\n" +
	"attributes\x18\x06 \x03(\v2+.openedr.events.SystemEvent.AttributesEntryR\n" +
	"attributes\x1a=\n" +
	"\x0fAttributesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xf5\x06\n" +
	"\x05Event\x12\x19\n" +
	"\bevent_id\x18\x01 \x01(\tR\aeventId\x12\x19\n" +
	"\bagent_id\x18\x02 \x01(\tR\aagentId\x128\n" +
	"\n" +
	"event_type\x18\x03 \x01(\x0e2\x19.openedr.common.EventTypeR\teventType\x128\n" +
	"\ttimestamp\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\x12\x1a\n" +
	"\bhostname\x18\x05 \x01(\tR\bhostname\x12C\n" +
	"\rprocess_event\x18\n" +
	" \x01(\v2\x1c.openedr.events.ProcessEventH\x00R\fprocessEvent\x12C\n" +
	"\rnetwork_event\x18\v \x01(\v2\x1c.openedr.events.NetworkEventH\x00R\fnetworkEvent\x12:\n" +
	"\n" +
	"file_event\x18\f \x01(\v2\x19.openedr.events.FileEventH\x00R\tfileEvent\x12F\n" +
	"\x0eregistry_event\x18\r \x01(\v2\x1d.openedr.events.RegistryEventH\x00R\rregistryEvent\x127\n" +
	"\tdns_event\x18\x0e \x01(\v2\x18.openedr.events.DNSEventH\x00R\bdnsEvent\x12=\n" +
	"\vlogin_event\x18\x0f \x01(\v2\x1a.openedr.events.LoginEventH\x00R\n" +
	"loginEvent\x12@\n" +
	"\fsystem_event\x18\x10 \x01(\v2\x1b.openedr.events.SystemEventH\x00R\vsystemEvent\x12?\n" +
	"\bmetadata\x18\x14 \x03(\v2#.openedr.events.Event.MetadataEntryR\bmetadata\x12>\n" +
	"\fthreat_level\x18\x15 \x01(\x0e2\x1b.openedr.common.ThreatLevelR\vthreatLevel\x12\x12\n" +
	"\x04tags\x18\x16 \x03(\tR\x04tags\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01B\f\n" +
	"\n" +
	"event_data\"\xb6\x01\n" +
	"\n" +
	"EventBatch\x12-\n" +
	"\x06events\x18\x01 \x03(\v2\x15.openedr.events.EventR\x06events\x12\x19\n" +
	"\bbatch_id\x18\x02 \x01(\tR\abatchId\x12C\n" +
	"\x0fbatch_timestamp\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\x0ebatchTimestamp\x12\x19\n" +
	"\bagent_id\x18\x04 \x01(\tR\aagentIdB5Z3github.com/XXXXD-cation/OpenEDR/shared/proto/eventsb\x06proto3"

var (
	file_shared_proto_events_proto_rawDescOnce sync.Once
	file_shared_proto_events_proto_rawDescData []byte
)

func file_shared_proto_events_proto_rawDescGZIP() []byte {
	file_shared_proto_events_proto_rawDescOnce.Do(func() {
		file_shared_proto_events_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_shared_proto_events_proto_rawDesc), len(file_shared_proto_events_proto_rawDesc)))
	})
	return file_shared_proto_events_proto_rawDescData
}

var file_shared_proto_events_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_shared_proto_events_proto_goTypes = []any{
	(*ProcessEvent)(nil),        // 0: openedr.events.ProcessEvent
	(*NetworkEvent)(nil),        // 1: openedr.events.NetworkEvent
	(*FileEvent)(nil),           // 2: openedr.events.FileEvent
	(*RegistryEvent)(nil),       // 3: openedr.events.RegistryEvent
	(*DNSEvent)(nil),            // 4: openedr.events.DNSEvent
	(*LoginEvent)(nil),          // 5: openedr.events.LoginEvent
	(*SystemEvent)(nil),         // 6: openedr.events.SystemEvent
	(*Event)(nil),               // 7: openedr.events.Event
	(*EventBatch)(nil),          // 8: openedr.events.EventBatch
	nil,                         // 9: openedr.events.ProcessEvent.EnvironmentEntry
	nil,                         // 10: openedr.events.SystemEvent.AttributesEntry
	nil,                         // 11: openedr.events.Event.MetadataEntry
	(*timestamp.Timestamp)(nil), // 12: google.protobuf.Timestamp
	(common.EventType)(0),       // 13: openedr.common.EventType
	(common.ThreatLevel)(0),     // 14: openedr.common.ThreatLevel
}
var file_shared_proto_events_proto_depIdxs = []int32{
	12, // 0: openedr.events.ProcessEvent.start_time:type_name -> google.protobuf.Timestamp
	12, // 1: openedr.events.ProcessEvent.end_time:type_name -> google.protobuf.Timestamp
	9,  // 2: openedr.events.ProcessEvent.environment:type_name -> openedr.events.ProcessEvent.EnvironmentEntry
	12, // 3: openedr.events.NetworkEvent.connection_time:type_name -> google.protobuf.Timestamp
	12, // 4: openedr.events.NetworkEvent.close_time:type_name -> google.protobuf.Timestamp
	12, // 5: openedr.events.FileEvent.access_time:type_name -> google.protobuf.Timestamp
	12, // 6: openedr.events.FileEvent.modify_time:type_name -> google.protobuf.Timestamp
	12, // 7: openedr.events.FileEvent.create_time:type_name -> google.protobuf.Timestamp
	12, // 8: openedr.events.RegistryEvent.timestamp:type_name -> google.protobuf.Timestamp
	12, // 9: openedr.events.DNSEvent.query_time:type_name -> google.protobuf.Timestamp
	12, // 10: openedr.events.LoginEvent.login_time:type_name -> google.protobuf.Timestamp
	12, // 11: openedr.events.LoginEvent.logout_time:type_name -> google.protobuf.Timestamp
	12, // 12: openedr.events.SystemEvent.timestamp:type_name -> google.protobuf.Timestamp
	10, // 13: openedr.events.SystemEvent.attributes:type_name -> openedr.events.SystemEvent.AttributesEntry
	13, // 14: openedr.events.Event.event_type:type_name -> openedr.common.EventType
	12, // 15: openedr.events.Event.timestamp:type_name -> google.protobuf.Timestamp
	0,  // 16: openedr.events.Event.process_event:type_name -> openedr.events.ProcessEvent
	1,  // 17: openedr.events.Event.network_event:type_name -> openedr.events.NetworkEvent
	2,  // 18: openedr.events.Event.file_event:type_name -> openedr.events.FileEvent
	3,  // 19: openedr.events.Event.registry_event:type_name -> openedr.events.RegistryEvent
	4,  // 20: openedr.events.Event.dns_event:type_name -> openedr.events.DNSEvent
	5,  // 21: openedr.events.Event.login_event:type_name -> openedr.events.LoginEvent
	6,  // 22: openedr.events.Event.system_event:type_name -> openedr.events.SystemEvent
	11, // 23: openedr.events.Event.metadata:type_name -> openedr.events.Event.MetadataEntry
	14, // 24: openedr.events.Event.threat_level:type_name -> openedr.common.ThreatLevel
	7,  // 25: openedr.events.EventBatch.events:type_name -> openedr.events.Event
	12, // 26: openedr.events.EventBatch.batch_timestamp:type_name -> google.protobuf.Timestamp
	27, // [27:27] is the sub-list for method output_type
	27, // [27:27] is the sub-list for method input_type
	27, // [27:27] is the sub-list for extension type_name
	27, // [27:27] is the sub-list for extension extendee
	0,  // [0:27] is the sub-list for field type_name
}

func init() { file_shared_proto_events_proto_init() }
func file_shared_proto_events_proto_init() {
	if File_shared_proto_events_proto != nil {
		return
	}
	file_shared_proto_events_proto_msgTypes[7].OneofWrappers = []any{
		(*Event_ProcessEvent)(nil),
		(*Event_NetworkEvent)(nil),
		(*Event_FileEvent)(nil),
		(*Event_RegistryEvent)(nil),
		(*Event_DnsEvent)(nil),
		(*Event_LoginEvent)(nil),
		(*Event_SystemEvent)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_shared_proto_events_proto_rawDesc), len(file_shared_proto_events_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_shared_proto_events_proto_goTypes,
		DependencyIndexes: file_shared_proto_events_proto_depIdxs,
		MessageInfos:      file_shared_proto_events_proto_msgTypes,
	}.Build()
	File_shared_proto_events_proto = out.File
	file_shared_proto_events_proto_goTypes = nil
	file_shared_proto_events_proto_depIdxs = nil
}
